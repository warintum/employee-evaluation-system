// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// คัดลอกโครงสร้างใหม่จาก improved-schema.txt ต่อจากนี้

// ต้นแบบสำหรับการประเมิน (เทียบกับชุดประเมินกระดาษ)
model EvaluationTemplate {
  id            String         @id @default(uuid())
  name          String         // ชื่อแบบฟอร์ม เช่น "แบบประเมินพนักงานรายวันทั่วไป"
  description   String?        // คำอธิบายเพิ่มเติม
  position      String         // ตำแหน่งที่เกี่ยวข้อง เช่น "พนักงานรายวันทั่วไป", "เจ้าหน้าที่ทั่วไป"
  maxScore      Float          @default(100) // คะแนนเต็ม (โดยปกติคือ 100)
  isActive      Boolean        @default(true)
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  
  // หัวข้อการประเมินที่อยู่ในแบบฟอร์มนี้
  evaluationItems EvaluationItem[]
  
  // การประเมินที่ใช้แบบฟอร์มนี้
  evaluations      Evaluation[]
}

// หัวข้อการประเมิน (เทียบกับหัวข้อย่อยในแบบประเมิน)
model EvaluationItem {
  id                String         @id @default(uuid())
  templateId        String         // เชื่อมโยงกับแบบฟอร์ม
  template          EvaluationTemplate @relation(fields: [templateId], references: [id])
  title             String         // ชื่อหัวข้อ เช่น "ปริมาณงาน"
  description       String?        // คำอธิบายเพิ่มเติม
  maxScore          Float          // คะแนนเต็มของหัวข้อนี้ เช่น 15
  weight            Float          // น้ำหนักคะแนน (เป็นเปอร์เซ็นต์จากคะแนนทั้งหมด)
  order             Int            // ลำดับการแสดงผล
  
  // เกณฑ์การให้คะแนนแต่ละเกรด
  gradeA_desc       String?        // คำอธิบายเกรด A (ดีเยี่ยม)
  gradeA_min        Float?         // คะแนนขั้นต่ำของเกรด A
  gradeA_max        Float?         // คะแนนสูงสุดของเกรด A
  
  gradeB_desc       String?        // คำอธิบายเกรด B (ดี)
  gradeB_min        Float?         // คะแนนขั้นต่ำของเกรด B
  gradeB_max        Float?         // คะแนนสูงสุดของเกรด B
  
  gradeC_desc       String?        // คำอธิบายเกรด C (ปานกลาง)
  gradeC_min        Float?         // คะแนนขั้นต่ำของเกรด C
  gradeC_max        Float?         // คะแนนสูงสุดของเกรด C
  
  gradeD_desc       String?        // คำอธิบายเกรด D (พอใช้)
  gradeD_min        Float?         // คะแนนขั้นต่ำของเกรด D
  gradeD_max        Float?         // คะแนนสูงสุดของเกรด D
  
  gradeE_desc       String?        // คำอธิบายเกรด E (ปรับปรุง)
  gradeE_min        Float?         // คะแนนขั้นต่ำของเกรด E
  gradeE_max        Float?         // คะแนนสูงสุดของเกรด E
  
  createdAt         DateTime       @default(now())
  updatedAt         DateTime       @updatedAt
  
  // คำตอบสำหรับหัวข้อนี้
  itemAnswers       ItemAnswer[]
}

// การประเมิน (เทียบกับการประเมินแต่ละครั้ง)
model Evaluation {
  id                  String         @id @default(uuid())
  templateId          String         // เชื่อมโยงกับแบบฟอร์มที่ใช้
  template            EvaluationTemplate @relation(fields: [templateId], references: [id])
  year                Int
  period              String         // รอบการประเมิน (เช่น Q1, Q2, ประจำปี)
  
  // ผู้ถูกประเมิน
  evalueeId           String
  evaluee             User           @relation("Evaluee", fields: [evalueeId], references: [id])
  
  // ผู้ประเมิน (ลำดับ 1)
  evaluatorId         String
  evaluator           User           @relation("Evaluator", fields: [evaluatorId], references: [id])
  
  // ผู้ตรวจสอบ (ลำดับ 2)
  reviewerId          String
  reviewer            User           @relation("Reviewer", fields: [reviewerId], references: [id])
  
  // ผู้จัดการ (ลำดับ 3)
  managerId           String
  manager             User           @relation("Manager", fields: [managerId], references: [id])
  
  // สถานะการประเมิน
  status              EvaluationStatus @default(PENDING)
  allowSelfEvaluation Boolean         @default(false)
  
  // ผลการประเมินจากผู้ประเมิน
  evaluatorComment    String?
  evaluatorApproved   Boolean         @default(false)
  evaluatorRejectedReason String?
  
  // ผลการตรวจสอบจากผู้ตรวจสอบ
  reviewerComment     String?
  reviewerApproved    Boolean         @default(false)
  reviewerRejectedReason String?
  
  // ผลการอนุมัติจากผู้จัดการ
  managerComment      String?
  managerApproved     Boolean         @default(false)
  managerRejectedReason String?
  
  // ผลการประเมินสุดท้าย
  finalScore          Float?
  finalGrade          String?
  
  createdAt           DateTime       @default(now())
  updatedAt           DateTime       @updatedAt
  
  // คำตอบสำหรับการประเมินนี้
  itemAnswers         ItemAnswer[]
}

// คำตอบสำหรับแต่ละหัวข้อในการประเมิน
model ItemAnswer {
  id                String         @id @default(uuid())
  evaluationId      String
  evaluation        Evaluation     @relation(fields: [evaluationId], references: [id])
  evaluationItemId  String
  evaluationItem    EvaluationItem @relation(fields: [evaluationItemId], references: [id])
  score             Float          // คะแนนที่ได้รับ
  comment           String?        // ความคิดเห็นเพิ่มเติม
  createdAt         DateTime       @default(now())
  updatedAt         DateTime       @updatedAt
}

// คงโมเดลอื่นๆ ที่มีอยู่แล้วในระบบ เช่น User, Attendance
model User {
  id            String         @id @default(uuid())
  email         String         @unique
  password      String
  firstName     String
  lastName      String
  employeeId    String         @unique
  role          Role           @default(USER)
  position      String
  department    String
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  isExempt      Boolean        @default(false) // ยกเว้นการประเมิน
  isActive      Boolean        @default(true)
  
  // การประเมินที่ผู้ใช้ได้รับ (ในฐานะผู้ถูกประเมิน)
  evaluationsAsEvaluee      Evaluation[] @relation("Evaluee")
  
  // การประเมินที่ผู้ใช้ทำ (ในฐานะผู้ประเมิน)
  evaluationsAsEvaluator    Evaluation[] @relation("Evaluator")
  
  // การประเมินที่ผู้ใช้ตรวจสอบ (ในฐานะผู้ตรวจสอบ)
  evaluationsAsReviewer     Evaluation[] @relation("Reviewer")
  
  // การประเมินที่ผู้ใช้อนุมัติ (ในฐานะผู้จัดการ)
  evaluationsAsManager      Evaluation[] @relation("Manager")
  
  // ข้อมูลการขาด/ลา/มาสาย
  attendances              Attendance[]
  
  // ลำดับผู้ประเมิน
  evaluatorSetups          EvaluatorSetup[] @relation("EvaluatorUser")
  reviewerSetups           EvaluatorSetup[] @relation("ReviewerUser")
  managerSetups            EvaluatorSetup[] @relation("ManagerUser")
  
  // การประเมินตนเอง
  selfEvaluations          SelfEvaluation[]
}

enum Role {
  ADMIN           // ผู้ดูแลระบบ
  ADMIN_HR        // HR ที่มีสิทธิ์เกือบเท่า Admin
  USER            // ผู้ใช้งานทั่วไป (ผู้ถูกประเมิน)
  EVALUATOR       // ผู้ประเมิน (ลำดับ 1)
  REVIEWER        // ผู้ตรวจสอบ (ลำดับ 2)
  MANAGER         // ผู้จัดการ/ผู้อำนวยการ (ลำดับ 3)
}

// ตั้งค่าลำดับผู้ประเมิน
model EvaluatorSetup {
  id            String         @id @default(uuid())
  departmentId  String         // แผนกที่เกี่ยวข้อง
  
  // ผู้ประเมิน (ลำดับ 1)
  evaluatorId   String
  evaluator     User           @relation("EvaluatorUser", fields: [evaluatorId], references: [id])
  
  // ผู้ตรวจสอบ (ลำดับ 2)
  reviewerId    String
  reviewer      User           @relation("ReviewerUser", fields: [reviewerId], references: [id])
  
  // ผู้จัดการ (ลำดับ 3)
  managerId     String
  manager       User           @relation("ManagerUser", fields: [managerId], references: [id])
  
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
}

// ข้อมูลการขาด/ลา/มาสาย
model Attendance {
  id            String         @id @default(uuid())
  userId        String
  user          User           @relation(fields: [userId], references: [id])
  date          DateTime
  type          AttendanceType
  reason        String?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
}

enum AttendanceType {
  LATE          // มาสาย
  ABSENT        // ขาดงาน
  SICK_LEAVE    // ลาป่วย
  PERSONAL_LEAVE // ลากิจ
  VACATION      // พักร้อน
  OTHER         // อื่นๆ
}

// ตั้งค่าการหักคะแนน
model DeductionRule {
  id            String         @id @default(uuid())
  type          AttendanceType
  points        Float          // คะแนนที่หัก
  maxCount      Int?           // จำนวนครั้งสูงสุด (ถ้ามี)
  forceGrade    String?        // บังคับเกรด (ถ้ามี)
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
}

// ตั้งค่าเกรด
model GradeRule {
  id            String         @id @default(uuid())
  grade         String         // เกรด (A, B, C, D, F)
  minScore      Float          // คะแนนขั้นต่ำ
  maxScore      Float          // คะแนนสูงสุด
  description   String?        // คำอธิบายเกรด
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
}

enum EvaluationStatus {
  PENDING               // รอดำเนินการ
  SELF_EVALUATING       // กำลังประเมินตนเอง
  EVALUATOR_EVALUATING  // กำลังรอผู้ประเมิน
  REVIEWER_REVIEWING    // กำลังรอผู้ตรวจสอบ
  MANAGER_REVIEWING     // กำลังรอผู้จัดการ
  COMPLETED             // เสร็จสิ้น
  REJECTED              // ถูกปฏิเสธ (ต้องทำใหม่)
}

// การประเมินตนเอง
model SelfEvaluation {
  id            String         @id @default(uuid())
  userId        String
  user          User           @relation(fields: [userId], references: [id])
  year          Int
  period        String
  status        SelfEvaluationStatus @default(PENDING)
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  
  selfAnswers   SelfAnswer[]
}

enum SelfEvaluationStatus {
  PENDING       // รอดำเนินการ
  IN_PROGRESS   // กำลังดำเนินการ
  COMPLETED     // เสร็จสิ้น
  SUBMITTED     // ส่งแล้ว
}

// คำตอบการประเมินตนเอง
model SelfAnswer {
  id                String         @id @default(uuid())
  selfEvaluationId  String
  selfEvaluation    SelfEvaluation @relation(fields: [selfEvaluationId], references: [id])
  questionId        String
  question          Question       @relation(fields: [questionId], references: [id])
  score             Float
  comment           String?
  createdAt         DateTime       @default(now())
  updatedAt         DateTime       @updatedAt
}

// คงโมเดลที่อาจยังใช้ในระบบอยู่
model Question {
  id            String         @id @default(uuid())
  text          String
  categoryId    String
  category      Category       @relation(fields: [categoryId], references: [id])
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  
  // คำตอบจากการประเมิน
  selfAnswers   SelfAnswer[]
}

model Category {
  id            String         @id @default(uuid())
  name          String
  description   String?
  position      String         // ตำแหน่งที่เกี่ยวข้อง
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  
  questions     Question[]
}

// ตั้งค่าระบบ
model Setting {
  id            String         @id @default(uuid())
  key           String         @unique
  value         String
  description   String?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
}